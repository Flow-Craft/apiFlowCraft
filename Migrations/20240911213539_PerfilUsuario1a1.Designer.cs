// <auto-generated />
using System;
using ApiNet8.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiNet8.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240911213539_PerfilUsuario1a1")]
    partial class PerfilUsuario1a1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApiNet8.Models.Club.ClubHistorial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ParametrosClubId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioEditor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParametrosClubId");

                    b.ToTable("ClubHistorial");
                });

            modelBuilder.Entity("ApiNet8.Models.Club.ParametrosClub", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ColorBannerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColorPrincipal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColorSecundario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescripcionQuienesSomos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("IconoPlataforma")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("LogoGrande")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("LogoPequenio")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PerfilClubId")
                        .HasColumnType("int");

                    b.Property<string>("TextoBannerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextoEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextoFooterEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TituloQuienesSomos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PerfilClubId");

                    b.ToTable("ParametrosClub");
                });

            modelBuilder.Entity("ApiNet8.Models.Club.PerfilClub", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombrePerfilClub")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioEditor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PerfilClub");
                });

            modelBuilder.Entity("ApiNet8.Models.Eventos.Asistencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EventoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("HoraEntrada")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Asistencia");
                });

            modelBuilder.Entity("ApiNet8.Models.Eventos.EstadoEvento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DescripcionEstado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreEstado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioEditor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EstadoEvento");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DescripcionEstado = "Evento creado",
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(441),
                            NombreEstado = "Creado",
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 2,
                            DescripcionEstado = "Evento cancelado",
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(443),
                            NombreEstado = "Cancelado",
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 3,
                            DescripcionEstado = "Evento finalizado",
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(445),
                            NombreEstado = "Finalizado",
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 4,
                            DescripcionEstado = "Evento iniciado",
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(447),
                            NombreEstado = "Iniciado",
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 5,
                            DescripcionEstado = "Evento suspendido",
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(448),
                            NombreEstado = "Suspendido",
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 6,
                            DescripcionEstado = "Evento en entretiempo",
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(449),
                            NombreEstado = "Entretiempo",
                            UsuarioEditor = 1
                        });
                });

            modelBuilder.Entity("ApiNet8.Models.Eventos.Evento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Banner")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<int>("CupoMaximo")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<bool>("EventoLleno")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InstalacionId")
                        .HasColumnType("int");

                    b.Property<string>("LinkStream")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoEventoId")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("InstalacionId");

                    b.HasIndex("TipoEventoId");

                    b.ToTable("Evento");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Evento");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ApiNet8.Models.Eventos.HistorialEvento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DetalleCambioEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoEventoId")
                        .HasColumnType("int");

                    b.Property<int?>("EventoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UsuarioEditor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstadoEventoId");

                    b.HasIndex("EventoId");

                    b.ToTable("HistorialEvento");
                });

            modelBuilder.Entity("ApiNet8.Models.Eventos.Inscripcion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EventoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInscripcion")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Inscripcion");
                });

            modelBuilder.Entity("ApiNet8.Models.Eventos.TipoEvento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreTipoEvento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioEditor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TipoEvento");
                });

            modelBuilder.Entity("ApiNet8.Models.Lecciones.AsistenciaLeccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AsistioAlumno")
                        .HasColumnType("bit");

                    b.Property<bool>("ClaseCompleta")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("LeccionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LeccionId");

                    b.ToTable("AsistenciaLeccion");
                });

            modelBuilder.Entity("ApiNet8.Models.Lecciones.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EdadMaxima")
                        .HasColumnType("int");

                    b.Property<int>("EdadMinima")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioEditor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("ApiNet8.Models.Lecciones.Disciplina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CantJugadores")
                        .HasColumnType("int");

                    b.Property<int>("CantJugadoresEnBanca")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EventoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PeriodosMax")
                        .HasColumnType("int");

                    b.Property<int>("TarjetasAdvertencia")
                        .HasColumnType("int");

                    b.Property<int>("TarjetasExpulsion")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioEditor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventoId");

                    b.ToTable("Disciplina");
                });

            modelBuilder.Entity("ApiNet8.Models.Lecciones.InscripcionUsuario", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("LeccionId")
                        .HasColumnType("int");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LeccionId");

                    b.ToTable("InscripcionUsuario");
                });

            modelBuilder.Entity("ApiNet8.Models.Lecciones.Leccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CantMaxima")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisciplinaId")
                        .HasColumnType("int");

                    b.Property<string>("Horarios")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lugar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("DisciplinaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Leccion");
                });

            modelBuilder.Entity("ApiNet8.Models.Lecciones.LeccionEstado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DescripcionEstado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreEstado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioEditor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LeccionEstado");
                });

            modelBuilder.Entity("ApiNet8.Models.Lecciones.LeccionHistorial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DetalleCambioEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("LeccionEstadoId")
                        .HasColumnType("int");

                    b.Property<int?>("LeccionId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioEditor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LeccionEstadoId");

                    b.HasIndex("LeccionId");

                    b.ToTable("LeccionHistorial");
                });

            modelBuilder.Entity("ApiNet8.Models.NoticiasYNotificaciones.Noticias", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Imagen")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioEditor")
                        .HasColumnType("int");

                    b.Property<string>("tag")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Noticias");
                });

            modelBuilder.Entity("ApiNet8.Models.NoticiasYNotificaciones.Notificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Adjunto")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaEnvio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaExpiracion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioEditor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Notificacion");
                });

            modelBuilder.Entity("ApiNet8.Models.NoticiasYNotificaciones.UsuarioNotificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("NotificacionId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NotificacionId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioNotificacion");
                });

            modelBuilder.Entity("ApiNet8.Models.Partidos.AccionPartido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("Minuto")
                        .HasColumnType("int");

                    b.Property<int>("NroJugador")
                        .HasColumnType("int");

                    b.Property<int>("PartidoId")
                        .HasColumnType("int");

                    b.Property<int>("TipoAccionPartidoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioEditor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PartidoId");

                    b.HasIndex("TipoAccionPartidoId");

                    b.ToTable("AccionPartido");
                });

            modelBuilder.Entity("ApiNet8.Models.Partidos.Equipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisciplinaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Local")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("DisciplinaId");

                    b.ToTable("Equipo");
                });

            modelBuilder.Entity("ApiNet8.Models.Partidos.EquipoEstado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DescripcionEstado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreEstado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioEditor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EquipoEstado");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DescripcionEstado = "Equipo activo",
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(493),
                            NombreEstado = "Activo",
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 2,
                            DescripcionEstado = "Equipo inactivo",
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(495),
                            NombreEstado = "Inactivo",
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 3,
                            DescripcionEstado = "Equipo suspendido",
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(497),
                            NombreEstado = "Suspendido",
                            UsuarioEditor = 1
                        });
                });

            modelBuilder.Entity("ApiNet8.Models.Partidos.EquipoHistorial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DetalleCambioEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EquipoEstadoId")
                        .HasColumnType("int");

                    b.Property<int?>("EquipoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UsuarioEditor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EquipoEstadoId");

                    b.HasIndex("EquipoId");

                    b.ToTable("EquipoHistorial");
                });

            modelBuilder.Entity("ApiNet8.Models.Partidos.EquipoPartido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EquipoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("JugadoresEnBanca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JugadoresEnCancha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EquipoId");

                    b.ToTable("EquipoPartido");
                });

            modelBuilder.Entity("ApiNet8.Models.Partidos.EquipoUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EquipoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumCamiseta")
                        .HasColumnType("int");

                    b.Property<string>("Puesto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EquipoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("EquipoUsuario");
                });

            modelBuilder.Entity("ApiNet8.Models.Partidos.Estadistica", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("MarcaEstadistica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PuntajeTipoAccion")
                        .HasColumnType("int");

                    b.Property<string>("RazonBaja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioEditor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Estadistica");
                });

            modelBuilder.Entity("ApiNet8.Models.Partidos.TipoAccionEstado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DescripcionEstado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreEstado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioEditor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TipoAccionEstado");
                });

            modelBuilder.Entity("ApiNet8.Models.Partidos.TipoAccionHistorial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DetalleCambioEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("TipoAccionEstadoId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoAccionPartidoId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioEditor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoAccionEstadoId");

                    b.HasIndex("TipoAccionPartidoId");

                    b.ToTable("TipoAccionHistorial");
                });

            modelBuilder.Entity("ApiNet8.Models.Partidos.TipoAccionPartido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisciplinaId")
                        .HasColumnType("int");

                    b.Property<bool>("ModificaTarjetasAdvertencia")
                        .HasColumnType("bit");

                    b.Property<bool>("ModificaTarjetasExpulsion")
                        .HasColumnType("bit");

                    b.Property<string>("NombreTipoAccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("secuencial")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DisciplinaId");

                    b.ToTable("TipoAccionPartido");
                });

            modelBuilder.Entity("ApiNet8.Models.Reservas.Instalacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Condiciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("HoraCierre")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("HoraInicio")
                        .HasColumnType("time");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Precio")
                        .HasColumnType("real");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Instalacion");
                });

            modelBuilder.Entity("ApiNet8.Models.Reservas.InstalacionEstado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DescripcionEstado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreEstado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioEditor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("InstalacionEstado");
                });

            modelBuilder.Entity("ApiNet8.Models.Reservas.InstalacionHistorial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DetalleCambioEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("InstalacionEstadoId")
                        .HasColumnType("int");

                    b.Property<int>("InstalacionId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioEditor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InstalacionEstadoId");

                    b.HasIndex("InstalacionId");

                    b.ToTable("InstalacionHistorial");
                });

            modelBuilder.Entity("ApiNet8.Models.Reservas.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaReserva")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HoraFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HoraInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("InstalacionId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioEditor")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InstalacionId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Reserva");
                });

            modelBuilder.Entity("ApiNet8.Models.TYC.HistorialTerminosYCondiciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaFinVigencia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaInicioVigencia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsuarioEditor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("HistorialTerminosYCondiciones");
                });

            modelBuilder.Entity("ApiNet8.Models.TYC.TerminosYCondiciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HistorialTerminosYCondicionesId")
                        .HasColumnType("int");

                    b.Property<string>("TYC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HistorialTerminosYCondicionesId");

                    b.ToTable("TerminosYCondiciones");
                });

            modelBuilder.Entity("ApiNet8.Models.Torneos.PartidoFase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FasePartido")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PartidoFaseId")
                        .HasColumnType("int");

                    b.Property<int>("TorneoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioEditor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PartidoFaseId");

                    b.HasIndex("TorneoId");

                    b.ToTable("PartidoFase");
                });

            modelBuilder.Entity("ApiNet8.Models.Torneos.Torneo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Banner")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("CantEquipos")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Condiciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisciplinaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("DisciplinaId");

                    b.ToTable("Torneo");
                });

            modelBuilder.Entity("ApiNet8.Models.Torneos.TorneoEstado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DescripcionEstado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreEstado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioEditor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TorneoEstado");
                });

            modelBuilder.Entity("ApiNet8.Models.Torneos.TorneoHistorial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DetalleCambioEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("TorneoEstadoId")
                        .HasColumnType("int");

                    b.Property<int?>("TorneoId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioEditor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TorneoEstadoId");

                    b.HasIndex("TorneoId");

                    b.ToTable("TorneoHistorial");
                });

            modelBuilder.Entity("ApiNet8.Models.Usuarios.CodigoVerificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaExpiracion")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("CodigoVerificacion");
                });

            modelBuilder.Entity("ApiNet8.Models.Usuarios.EstadoSolicitudAsociacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DescripcionEstado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreEstado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioEditor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EstadoSolicitudAsociacion");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DescripcionEstado = "Solicitud pendiente",
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(527),
                            NombreEstado = "Pendiente",
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 2,
                            DescripcionEstado = "Solicitud aprobada",
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(529),
                            NombreEstado = "Aprobada",
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 3,
                            DescripcionEstado = "Solicitud rechazada",
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(531),
                            NombreEstado = "Rechazada",
                            UsuarioEditor = 1
                        });
                });

            modelBuilder.Entity("ApiNet8.Models.Usuarios.GrupoFamiliar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DocumentosGrupoFamiliar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DuenioGrupoFamiliarId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreGrupoFamiliar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("duenioGrupoFamiliar")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DuenioGrupoFamiliarId");

                    b.ToTable("GrupoFamiliar");
                });

            modelBuilder.Entity("ApiNet8.Models.Usuarios.Perfil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DescripcionPerfil")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombrePerfil")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioEditor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Perfil");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DescripcionPerfil = "Administrador general del sistema",
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(566),
                            NombrePerfil = "Admin",
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 2,
                            DescripcionPerfil = "Administrativo perteneciente al club",
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(569),
                            NombrePerfil = "Administrativo",
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 3,
                            DescripcionPerfil = "Usuario publico",
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(571),
                            NombrePerfil = "Simpatizante",
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 4,
                            DescripcionPerfil = "Usuario privado socio del club",
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(572),
                            NombrePerfil = "Socio",
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 5,
                            DescripcionPerfil = "Usuario privado profesor perteneciente al club",
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(573),
                            NombrePerfil = "Profesor",
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 6,
                            DescripcionPerfil = "Usuario privado arbitro oficial para partidos",
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(575),
                            NombrePerfil = "Arbitro",
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 7,
                            DescripcionPerfil = "Usuario privado ayudante de profesor en partidos",
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(576),
                            NombrePerfil = "Planillero",
                            UsuarioEditor = 1
                        });
                });

            modelBuilder.Entity("ApiNet8.Models.Usuarios.PerfilPermiso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("PerfilId")
                        .HasColumnType("int");

                    b.Property<int>("PermisoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioEditor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PerfilPermiso");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(913),
                            PerfilId = 2,
                            PermisoId = 1,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 2,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(915),
                            PerfilId = 2,
                            PermisoId = 2,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 3,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(917),
                            PerfilId = 2,
                            PermisoId = 3,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 4,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(919),
                            PerfilId = 2,
                            PermisoId = 4,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 5,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(920),
                            PerfilId = 2,
                            PermisoId = 5,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 6,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(922),
                            PerfilId = 2,
                            PermisoId = 6,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 7,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(925),
                            PerfilId = 2,
                            PermisoId = 7,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 8,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(926),
                            PerfilId = 2,
                            PermisoId = 8,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 9,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(927),
                            PerfilId = 2,
                            PermisoId = 9,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 10,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(928),
                            PerfilId = 2,
                            PermisoId = 10,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 11,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(930),
                            PerfilId = 2,
                            PermisoId = 11,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 12,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(931),
                            PerfilId = 2,
                            PermisoId = 12,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 13,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(932),
                            PerfilId = 2,
                            PermisoId = 13,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 14,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(933),
                            PerfilId = 2,
                            PermisoId = 14,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 15,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(935),
                            PerfilId = 2,
                            PermisoId = 15,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 16,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(936),
                            PerfilId = 2,
                            PermisoId = 16,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 17,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(938),
                            PerfilId = 2,
                            PermisoId = 17,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 18,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(944),
                            PerfilId = 2,
                            PermisoId = 18,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 19,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(945),
                            PerfilId = 2,
                            PermisoId = 19,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 20,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(947),
                            PerfilId = 2,
                            PermisoId = 20,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 21,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(948),
                            PerfilId = 2,
                            PermisoId = 21,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 22,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(959),
                            PerfilId = 2,
                            PermisoId = 22,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 23,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(965),
                            PerfilId = 2,
                            PermisoId = 23,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 24,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(966),
                            PerfilId = 2,
                            PermisoId = 24,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 25,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(967),
                            PerfilId = 2,
                            PermisoId = 25,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 26,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(969),
                            PerfilId = 2,
                            PermisoId = 26,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 27,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(970),
                            PerfilId = 2,
                            PermisoId = 27,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 28,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(971),
                            PerfilId = 3,
                            PermisoId = 28,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 29,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(973),
                            PerfilId = 4,
                            PermisoId = 28,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 30,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(974),
                            PerfilId = 2,
                            PermisoId = 29,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 31,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(976),
                            PerfilId = 3,
                            PermisoId = 29,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 32,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(978),
                            PerfilId = 4,
                            PermisoId = 29,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 33,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(979),
                            PerfilId = 2,
                            PermisoId = 30,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 34,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(980),
                            PerfilId = 2,
                            PermisoId = 31,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 35,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(982),
                            PerfilId = 2,
                            PermisoId = 32,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 36,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(983),
                            PerfilId = 2,
                            PermisoId = 33,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 37,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(984),
                            PerfilId = 3,
                            PermisoId = 33,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 38,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(986),
                            PerfilId = 4,
                            PermisoId = 33,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 39,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(987),
                            PerfilId = 2,
                            PermisoId = 34,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 40,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(988),
                            PerfilId = 2,
                            PermisoId = 35,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 41,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(989),
                            PerfilId = 2,
                            PermisoId = 36,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 42,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(991),
                            PerfilId = 2,
                            PermisoId = 37,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 43,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(992),
                            PerfilId = 3,
                            PermisoId = 37,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 44,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(994),
                            PerfilId = 4,
                            PermisoId = 37,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 45,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(996),
                            PerfilId = 2,
                            PermisoId = 38,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 46,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(997),
                            PerfilId = 2,
                            PermisoId = 39,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 47,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(998),
                            PerfilId = 3,
                            PermisoId = 40,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 48,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1000),
                            PerfilId = 4,
                            PermisoId = 40,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 49,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1001),
                            PerfilId = 3,
                            PermisoId = 41,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 50,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1002),
                            PerfilId = 4,
                            PermisoId = 41,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 51,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1003),
                            PerfilId = 6,
                            PermisoId = 42,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 52,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1005),
                            PerfilId = 6,
                            PermisoId = 43,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 53,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1006),
                            PerfilId = 6,
                            PermisoId = 44,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 54,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1007),
                            PerfilId = 6,
                            PermisoId = 45,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 55,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1009),
                            PerfilId = 6,
                            PermisoId = 46,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 56,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1010),
                            PerfilId = 7,
                            PermisoId = 47,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 57,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1014),
                            PerfilId = 7,
                            PermisoId = 48,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 58,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1015),
                            PerfilId = 7,
                            PermisoId = 49,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 59,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1016),
                            PerfilId = 7,
                            PermisoId = 50,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 60,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1017),
                            PerfilId = 6,
                            PermisoId = 51,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 61,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1019),
                            PerfilId = 6,
                            PermisoId = 52,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 62,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1020),
                            PerfilId = 3,
                            PermisoId = 53,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 63,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1021),
                            PerfilId = 3,
                            PermisoId = 54,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 64,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1023),
                            PerfilId = 4,
                            PermisoId = 54,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 65,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1024),
                            PerfilId = 3,
                            PermisoId = 55,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 66,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1025),
                            PerfilId = 4,
                            PermisoId = 55,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 67,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1026),
                            PerfilId = 4,
                            PermisoId = 56,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 68,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1028),
                            PerfilId = 3,
                            PermisoId = 57,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 69,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1029),
                            PerfilId = 4,
                            PermisoId = 57,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 70,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1031),
                            PerfilId = 3,
                            PermisoId = 58,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 71,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1033),
                            PerfilId = 2,
                            PermisoId = 59,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 72,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1034),
                            PerfilId = 4,
                            PermisoId = 59,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 73,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1035),
                            PerfilId = 2,
                            PermisoId = 60,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 74,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1037),
                            PerfilId = 4,
                            PermisoId = 60,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 75,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1038),
                            PerfilId = 2,
                            PermisoId = 61,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 76,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1040),
                            PerfilId = 4,
                            PermisoId = 61,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 77,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1041),
                            PerfilId = 4,
                            PermisoId = 62,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 78,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1042),
                            PerfilId = 4,
                            PermisoId = 63,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 79,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1044),
                            PerfilId = 5,
                            PermisoId = 64,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 80,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1045),
                            PerfilId = 5,
                            PermisoId = 65,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 81,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1046),
                            PerfilId = 5,
                            PermisoId = 66,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 82,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1048),
                            PerfilId = 5,
                            PermisoId = 67,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 83,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1050),
                            PerfilId = 5,
                            PermisoId = 68,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 84,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1051),
                            PerfilId = 5,
                            PermisoId = 69,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 85,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1053),
                            PerfilId = 2,
                            PermisoId = 70,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 86,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1054),
                            PerfilId = 2,
                            PermisoId = 71,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 87,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1055),
                            PerfilId = 2,
                            PermisoId = 72,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 88,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1057),
                            PerfilId = 2,
                            PermisoId = 73,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 89,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1058),
                            PerfilId = 4,
                            PermisoId = 74,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 90,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1059),
                            PerfilId = 4,
                            PermisoId = 75,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 91,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1061),
                            PerfilId = 4,
                            PermisoId = 76,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 92,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1062),
                            PerfilId = 5,
                            PermisoId = 76,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 93,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1063),
                            PerfilId = 2,
                            PermisoId = 77,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 94,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1065),
                            PerfilId = 2,
                            PermisoId = 78,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 95,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1066),
                            PerfilId = 2,
                            PermisoId = 79,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 96,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1068),
                            PerfilId = 4,
                            PermisoId = 80,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 97,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1069),
                            PerfilId = 4,
                            PermisoId = 81,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 98,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1071),
                            PerfilId = 2,
                            PermisoId = 82,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 99,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1072),
                            PerfilId = 4,
                            PermisoId = 82,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 100,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1073),
                            PerfilId = 2,
                            PermisoId = 83,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 101,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1075),
                            PerfilId = 4,
                            PermisoId = 83,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 102,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1076),
                            PerfilId = 2,
                            PermisoId = 84,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 103,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1077),
                            PerfilId = 4,
                            PermisoId = 84,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 104,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1079),
                            PerfilId = 1,
                            PermisoId = 85,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 105,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1080),
                            PerfilId = 1,
                            PermisoId = 86,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 106,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1081),
                            PerfilId = 1,
                            PermisoId = 87,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 107,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1083),
                            PerfilId = 1,
                            PermisoId = 88,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 108,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1084),
                            PerfilId = 1,
                            PermisoId = 89,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 109,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1085),
                            PerfilId = 1,
                            PermisoId = 90,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 110,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1089),
                            PerfilId = 1,
                            PermisoId = 91,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 111,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1090),
                            PerfilId = 1,
                            PermisoId = 92,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 112,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1092),
                            PerfilId = 1,
                            PermisoId = 93,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 113,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1093),
                            PerfilId = 1,
                            PermisoId = 94,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 114,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1094),
                            PerfilId = 1,
                            PermisoId = 95,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 115,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1096),
                            PerfilId = 1,
                            PermisoId = 96,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 116,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1097),
                            PerfilId = 1,
                            PermisoId = 97,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 117,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1098),
                            PerfilId = 1,
                            PermisoId = 98,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 118,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1100),
                            PerfilId = 1,
                            PermisoId = 99,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 119,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1101),
                            PerfilId = 1,
                            PermisoId = 100,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 120,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1102),
                            PerfilId = 1,
                            PermisoId = 101,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 121,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1104),
                            PerfilId = 1,
                            PermisoId = 102,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 122,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1105),
                            PerfilId = 1,
                            PermisoId = 103,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 123,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1107),
                            PerfilId = 1,
                            PermisoId = 104,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 124,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1109),
                            PerfilId = 1,
                            PermisoId = 105,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 125,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1110),
                            PerfilId = 1,
                            PermisoId = 106,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 126,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1111),
                            PerfilId = 1,
                            PermisoId = 107,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 127,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1113),
                            PerfilId = 1,
                            PermisoId = 108,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 128,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1114),
                            PerfilId = 1,
                            PermisoId = 109,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 129,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1115),
                            PerfilId = 1,
                            PermisoId = 110,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 130,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1117),
                            PerfilId = 1,
                            PermisoId = 111,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 131,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1123),
                            PerfilId = 2,
                            PermisoId = 112,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 132,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1125),
                            PerfilId = 2,
                            PermisoId = 113,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 133,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1126),
                            PerfilId = 2,
                            PermisoId = 114,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 134,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1127),
                            PerfilId = 2,
                            PermisoId = 115,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 135,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1129),
                            PerfilId = 2,
                            PermisoId = 116,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 136,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1130),
                            PerfilId = 2,
                            PermisoId = 117,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 137,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1131),
                            PerfilId = 2,
                            PermisoId = 118,
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 138,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(1133),
                            PerfilId = 2,
                            PermisoId = 119,
                            UsuarioEditor = 1
                        });
                });

            modelBuilder.Entity("ApiNet8.Models.Usuarios.PerfilUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("PerfilId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PerfilId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("PerfilUsuario");
                });

            modelBuilder.Entity("ApiNet8.Models.Usuarios.Permiso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Funcionalidades")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombrePermiso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Permiso");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(618),
                            Funcionalidades = "Alta usuario",
                            Modulo = "Usuario",
                            NombrePermiso = "Configuracion del sistema"
                        },
                        new
                        {
                            Id = 2,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(625),
                            Funcionalidades = "Modificación usuario",
                            Modulo = "Usuario",
                            NombrePermiso = "Configuracion del sistema"
                        },
                        new
                        {
                            Id = 3,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(627),
                            Funcionalidades = "Baja usuario",
                            Modulo = "Usuario",
                            NombrePermiso = "Configuracion del sistema"
                        },
                        new
                        {
                            Id = 4,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(629),
                            Funcionalidades = "Blanquear contraseña usuario",
                            Modulo = "Usuario",
                            NombrePermiso = "Configuracion del sistema"
                        },
                        new
                        {
                            Id = 5,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(630),
                            Funcionalidades = "Ver información usuario",
                            Modulo = "Usuario",
                            NombrePermiso = "Configuracion del sistema"
                        },
                        new
                        {
                            Id = 6,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(632),
                            Funcionalidades = "Bloquear usuario",
                            Modulo = "Usuario",
                            NombrePermiso = "Configuracion del sistema"
                        },
                        new
                        {
                            Id = 7,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(634),
                            Funcionalidades = "Desbloquear usuario",
                            Modulo = "Usuario",
                            NombrePermiso = "Configuracion del sistema"
                        },
                        new
                        {
                            Id = 8,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(645),
                            Funcionalidades = "Alta grupo familiar",
                            Modulo = "Usuario",
                            NombrePermiso = "Configuracion del sistema"
                        },
                        new
                        {
                            Id = 9,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(654),
                            Funcionalidades = "Modificación grupo familiar",
                            Modulo = "Usuario",
                            NombrePermiso = "Configuracion del sistema"
                        },
                        new
                        {
                            Id = 10,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(655),
                            Funcionalidades = "Baja grupo familiar",
                            Modulo = "Usuario",
                            NombrePermiso = "Configuracion del sistema"
                        },
                        new
                        {
                            Id = 11,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(657),
                            Funcionalidades = "Aceptar solicitud",
                            Modulo = "Solicitudes",
                            NombrePermiso = "Configuracion del sistema"
                        },
                        new
                        {
                            Id = 12,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(658),
                            Funcionalidades = "Rechazar solicitud",
                            Modulo = "Solicitudes",
                            NombrePermiso = "Configuracion del sistema"
                        },
                        new
                        {
                            Id = 13,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(659),
                            Funcionalidades = "Alta perfil",
                            Modulo = "Perfiles",
                            NombrePermiso = "Configuracion del sistema"
                        },
                        new
                        {
                            Id = 14,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(661),
                            Funcionalidades = "Modificación perfil",
                            Modulo = "Perfiles",
                            NombrePermiso = "Configuracion del sistema"
                        },
                        new
                        {
                            Id = 15,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(662),
                            Funcionalidades = "Baja perfil",
                            Modulo = "Perfiles",
                            NombrePermiso = "Configuracion del sistema"
                        },
                        new
                        {
                            Id = 16,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(664),
                            Funcionalidades = "Alta configuracion del sistema",
                            Modulo = "Configuraciones generales",
                            NombrePermiso = "Configuracion del sistema"
                        },
                        new
                        {
                            Id = 17,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(666),
                            Funcionalidades = "Modificación configuracion del sistema",
                            Modulo = "Configuraciones generales",
                            NombrePermiso = "Configuracion del sistema"
                        },
                        new
                        {
                            Id = 18,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(667),
                            Funcionalidades = "Baja configuracion del sistema",
                            Modulo = "Configuraciones generales",
                            NombrePermiso = "Configuracion del sistema"
                        },
                        new
                        {
                            Id = 19,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(668),
                            Funcionalidades = "Activar configuracion del sistema",
                            Modulo = "Configuraciones generales",
                            NombrePermiso = "Configuracion del sistema"
                        },
                        new
                        {
                            Id = 20,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(670),
                            Funcionalidades = "Alta terminos y condiciones",
                            Modulo = "Configuraciones generales",
                            NombrePermiso = "Configuracion del sistema"
                        },
                        new
                        {
                            Id = 21,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(671),
                            Funcionalidades = "Baja terminos y condiciones",
                            Modulo = "Configuraciones generales",
                            NombrePermiso = "Configuracion del sistema"
                        },
                        new
                        {
                            Id = 22,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(672),
                            Funcionalidades = "Alta disciplina",
                            Modulo = "Disciplina",
                            NombrePermiso = "Configuracion del sistema"
                        },
                        new
                        {
                            Id = 23,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(674),
                            Funcionalidades = "Modificación disciplina",
                            Modulo = "Disciplina",
                            NombrePermiso = "Configuracion del sistema"
                        },
                        new
                        {
                            Id = 24,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(675),
                            Funcionalidades = "Baja disciplina",
                            Modulo = "Disciplina",
                            NombrePermiso = "Configuracion del sistema"
                        },
                        new
                        {
                            Id = 25,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(676),
                            Funcionalidades = "Alta categoria",
                            Modulo = "Categoria",
                            NombrePermiso = "Configuracion del sistema"
                        },
                        new
                        {
                            Id = 26,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(678),
                            Funcionalidades = "Modificación categoria",
                            Modulo = "Categoria",
                            NombrePermiso = "Configuracion del sistema"
                        },
                        new
                        {
                            Id = 27,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(679),
                            Funcionalidades = "Baja categoria",
                            Modulo = "Categoria",
                            NombrePermiso = "Configuracion del sistema"
                        },
                        new
                        {
                            Id = 28,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(681),
                            Funcionalidades = "Ver disciplinas",
                            Modulo = "Disciplina",
                            NombrePermiso = "Disciplina"
                        },
                        new
                        {
                            Id = 29,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(683),
                            Funcionalidades = "Ver instalaciones",
                            Modulo = "Instalaciones",
                            NombrePermiso = "Instalaciones"
                        },
                        new
                        {
                            Id = 30,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(684),
                            Funcionalidades = "Alta instalacion",
                            Modulo = "Instalaciones",
                            NombrePermiso = "Instalaciones"
                        },
                        new
                        {
                            Id = 31,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(693),
                            Funcionalidades = "Modificación instalacion",
                            Modulo = "Instalaciones",
                            NombrePermiso = "Instalaciones"
                        },
                        new
                        {
                            Id = 32,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(694),
                            Funcionalidades = "Baja instalacion",
                            Modulo = "Instalaciones",
                            NombrePermiso = "Instalaciones"
                        },
                        new
                        {
                            Id = 33,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(696),
                            Funcionalidades = "Ver noticias",
                            Modulo = "Noticias",
                            NombrePermiso = "Noticias"
                        },
                        new
                        {
                            Id = 34,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(697),
                            Funcionalidades = "Alta noticia",
                            Modulo = "Noticias",
                            NombrePermiso = "Noticias"
                        },
                        new
                        {
                            Id = 35,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(698),
                            Funcionalidades = "Modificación noticia",
                            Modulo = "Noticias",
                            NombrePermiso = "Noticias"
                        },
                        new
                        {
                            Id = 36,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(699),
                            Funcionalidades = "Baja noticia",
                            Modulo = "Noticias",
                            NombrePermiso = "Noticias"
                        },
                        new
                        {
                            Id = 37,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(701),
                            Funcionalidades = "Compartir noticia",
                            Modulo = "Noticias",
                            NombrePermiso = "Noticias"
                        },
                        new
                        {
                            Id = 38,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(702),
                            Funcionalidades = "Alta notificacion",
                            Modulo = "Notificaciones",
                            NombrePermiso = "Noticias"
                        },
                        new
                        {
                            Id = 39,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(707),
                            Funcionalidades = "Baja notificacion",
                            Modulo = "Notificaciones",
                            NombrePermiso = "Noticias"
                        },
                        new
                        {
                            Id = 40,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(709),
                            Funcionalidades = "Ver partidos",
                            Modulo = "Partidos",
                            NombrePermiso = "Partidos"
                        },
                        new
                        {
                            Id = 41,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(710),
                            Funcionalidades = "Visualizar partidos en tiempo real",
                            Modulo = "Partidos",
                            NombrePermiso = "Partidos"
                        },
                        new
                        {
                            Id = 42,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(711),
                            Funcionalidades = "Iniciar partido",
                            Modulo = "Partidos",
                            NombrePermiso = "Partidos"
                        },
                        new
                        {
                            Id = 43,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(713),
                            Funcionalidades = "Suspender partido",
                            Modulo = "Partidos",
                            NombrePermiso = "Partidos"
                        },
                        new
                        {
                            Id = 44,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(714),
                            Funcionalidades = "Preparar partido",
                            Modulo = "Partidos",
                            NombrePermiso = "Partidos"
                        },
                        new
                        {
                            Id = 45,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(715),
                            Funcionalidades = "Finalizar partido",
                            Modulo = "Partidos",
                            NombrePermiso = "Partidos"
                        },
                        new
                        {
                            Id = 46,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(717),
                            Funcionalidades = "Alta accion de partido",
                            Modulo = "Partidos",
                            NombrePermiso = "Partidos"
                        },
                        new
                        {
                            Id = 47,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(718),
                            Funcionalidades = "Alta estadistica ",
                            Modulo = "Partidos",
                            NombrePermiso = "Partidos"
                        },
                        new
                        {
                            Id = 48,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(719),
                            Funcionalidades = "Modificación estadistica",
                            Modulo = "Partidos",
                            NombrePermiso = "Partidos"
                        },
                        new
                        {
                            Id = 49,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(721),
                            Funcionalidades = "Baja estadistica",
                            Modulo = "Partidos",
                            NombrePermiso = "Partidos"
                        },
                        new
                        {
                            Id = 50,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(723),
                            Funcionalidades = "Ver estadistica",
                            Modulo = "Partidos",
                            NombrePermiso = "Partidos"
                        },
                        new
                        {
                            Id = 51,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(724),
                            Funcionalidades = "Iniciar tiempo",
                            Modulo = "Partidos",
                            NombrePermiso = "Partidos"
                        },
                        new
                        {
                            Id = 52,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(725),
                            Funcionalidades = "Finalizar tiempo",
                            Modulo = "Partidos",
                            NombrePermiso = "Partidos"
                        },
                        new
                        {
                            Id = 53,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(727),
                            Funcionalidades = "Asociarse",
                            Modulo = "Mi perfil",
                            NombrePermiso = "Mi perfil"
                        },
                        new
                        {
                            Id = 54,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(728),
                            Funcionalidades = "Darse de baja",
                            Modulo = "Mi perfil",
                            NombrePermiso = "Mi perfil"
                        },
                        new
                        {
                            Id = 55,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(729),
                            Funcionalidades = "Modificación mi perfil",
                            Modulo = "Mi perfil",
                            NombrePermiso = "Mi perfil"
                        },
                        new
                        {
                            Id = 56,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(731),
                            Funcionalidades = "Generar qr",
                            Modulo = "Mi perfil",
                            NombrePermiso = "Mi perfil"
                        },
                        new
                        {
                            Id = 57,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(732),
                            Funcionalidades = "Ver mi perfil",
                            Modulo = "Mi perfil",
                            NombrePermiso = "Mi perfil"
                        },
                        new
                        {
                            Id = 58,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(733),
                            Funcionalidades = "Ver quienes somos",
                            Modulo = "Quienes somos?",
                            NombrePermiso = "Quienes somos?"
                        },
                        new
                        {
                            Id = 59,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(734),
                            Funcionalidades = "Alta reserva",
                            Modulo = "Reservas",
                            NombrePermiso = "Reservas"
                        },
                        new
                        {
                            Id = 60,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(737),
                            Funcionalidades = "Modificación reserva",
                            Modulo = "Reservas",
                            NombrePermiso = "Reservas"
                        },
                        new
                        {
                            Id = 61,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(738),
                            Funcionalidades = "Baja reserva",
                            Modulo = "Reservas",
                            NombrePermiso = "Reservas"
                        },
                        new
                        {
                            Id = 62,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(739),
                            Funcionalidades = "Inscribirse a leccion",
                            Modulo = "Lecciones",
                            NombrePermiso = "Lecciones"
                        },
                        new
                        {
                            Id = 63,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(741),
                            Funcionalidades = "Desinscribirse a leccion",
                            Modulo = "Lecciones",
                            NombrePermiso = "Lecciones"
                        },
                        new
                        {
                            Id = 64,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(742),
                            Funcionalidades = "Comenzar leccion",
                            Modulo = "Lecciones",
                            NombrePermiso = "Lecciones"
                        },
                        new
                        {
                            Id = 65,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(743),
                            Funcionalidades = "Ver estadisticas de leccion",
                            Modulo = "Lecciones",
                            NombrePermiso = "Lecciones"
                        },
                        new
                        {
                            Id = 66,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(744),
                            Funcionalidades = "Registrar asistencia",
                            Modulo = "Lecciones",
                            NombrePermiso = "Lecciones"
                        },
                        new
                        {
                            Id = 67,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(746),
                            Funcionalidades = "Modificación estadistica",
                            Modulo = "Lecciones",
                            NombrePermiso = "Lecciones"
                        },
                        new
                        {
                            Id = 68,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(747),
                            Funcionalidades = "Baja estadistica",
                            Modulo = "Lecciones",
                            NombrePermiso = "Lecciones"
                        },
                        new
                        {
                            Id = 69,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(748),
                            Funcionalidades = "Finalizar leccion",
                            Modulo = "Lecciones",
                            NombrePermiso = "Lecciones"
                        },
                        new
                        {
                            Id = 70,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(751),
                            Funcionalidades = "Alta evento",
                            Modulo = "Eventos",
                            NombrePermiso = "Eventos"
                        },
                        new
                        {
                            Id = 71,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(752),
                            Funcionalidades = "Modificación evento",
                            Modulo = "Eventos",
                            NombrePermiso = "Eventos"
                        },
                        new
                        {
                            Id = 72,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(753),
                            Funcionalidades = "Baja evento",
                            Modulo = "Eventos",
                            NombrePermiso = "Eventos"
                        },
                        new
                        {
                            Id = 73,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(755),
                            Funcionalidades = "Tomar asistencia a evento",
                            Modulo = "Eventos",
                            NombrePermiso = "Eventos"
                        },
                        new
                        {
                            Id = 74,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(756),
                            Funcionalidades = "Inscribirse a evento",
                            Modulo = "Eventos",
                            NombrePermiso = "Eventos"
                        },
                        new
                        {
                            Id = 75,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(757),
                            Funcionalidades = "Desinscribirse a evento",
                            Modulo = "Eventos",
                            NombrePermiso = "Eventos"
                        },
                        new
                        {
                            Id = 76,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(759),
                            Funcionalidades = "Ver estadisticas de leccion y partidos",
                            Modulo = "Estadisticas",
                            NombrePermiso = "Estadisticas"
                        },
                        new
                        {
                            Id = 77,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(760),
                            Funcionalidades = "Alta torneo",
                            Modulo = "Torneos",
                            NombrePermiso = "Torneos"
                        },
                        new
                        {
                            Id = 78,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(761),
                            Funcionalidades = "Modificación torneo",
                            Modulo = "Torneos",
                            NombrePermiso = "Torneos"
                        },
                        new
                        {
                            Id = 79,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(762),
                            Funcionalidades = "Baja torneo",
                            Modulo = "Torneos",
                            NombrePermiso = "Torneos"
                        },
                        new
                        {
                            Id = 80,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(764),
                            Funcionalidades = "Inscribirse a torneo",
                            Modulo = "Torneos",
                            NombrePermiso = "Torneos"
                        },
                        new
                        {
                            Id = 81,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(768),
                            Funcionalidades = "Desinscribirse a torneo",
                            Modulo = "Torneos",
                            NombrePermiso = "Torneos"
                        },
                        new
                        {
                            Id = 82,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(769),
                            Funcionalidades = "Alta equipo",
                            Modulo = "Equipos",
                            NombrePermiso = "Torneos"
                        },
                        new
                        {
                            Id = 83,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(775),
                            Funcionalidades = "Modificación equipo",
                            Modulo = "Equipos",
                            NombrePermiso = "Torneos"
                        },
                        new
                        {
                            Id = 84,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(777),
                            Funcionalidades = "Baja equipo",
                            Modulo = "Equipos",
                            NombrePermiso = "Torneos"
                        },
                        new
                        {
                            Id = 85,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(778),
                            Funcionalidades = "Alta estado equipo",
                            Modulo = "Equipo",
                            NombrePermiso = "Estados"
                        },
                        new
                        {
                            Id = 86,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(779),
                            Funcionalidades = "Modificación estado equipo",
                            Modulo = "Equipo",
                            NombrePermiso = "Estados"
                        },
                        new
                        {
                            Id = 87,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(780),
                            Funcionalidades = "Baja estado equipo",
                            Modulo = "Equipo",
                            NombrePermiso = "Estados"
                        },
                        new
                        {
                            Id = 88,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(782),
                            Funcionalidades = "Alta estado evento",
                            Modulo = "Evento",
                            NombrePermiso = "Estados"
                        },
                        new
                        {
                            Id = 89,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(783),
                            Funcionalidades = "Modificación estado evento",
                            Modulo = "Evento",
                            NombrePermiso = "Estados"
                        },
                        new
                        {
                            Id = 90,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(784),
                            Funcionalidades = "Baja estado evento",
                            Modulo = "Evento",
                            NombrePermiso = "Estados"
                        },
                        new
                        {
                            Id = 91,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(786),
                            Funcionalidades = "Alta estado usuario",
                            Modulo = "Usuario",
                            NombrePermiso = "Estados"
                        },
                        new
                        {
                            Id = 92,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(788),
                            Funcionalidades = "Modificación estado usuario",
                            Modulo = "Usuario",
                            NombrePermiso = "Estados"
                        },
                        new
                        {
                            Id = 93,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(789),
                            Funcionalidades = "Baja estado usuario",
                            Modulo = "Usuario",
                            NombrePermiso = "Estados"
                        },
                        new
                        {
                            Id = 94,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(790),
                            Funcionalidades = "Alta estado leccion",
                            Modulo = "Leccion",
                            NombrePermiso = "Estados"
                        },
                        new
                        {
                            Id = 95,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(792),
                            Funcionalidades = "Modificación estado leccion",
                            Modulo = "Leccion",
                            NombrePermiso = "Estados"
                        },
                        new
                        {
                            Id = 96,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(793),
                            Funcionalidades = "Baja estado leccion",
                            Modulo = "Leccion",
                            NombrePermiso = "Estados"
                        },
                        new
                        {
                            Id = 97,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(794),
                            Funcionalidades = "Alta estado instalacion",
                            Modulo = "Instalacion",
                            NombrePermiso = "Estados"
                        },
                        new
                        {
                            Id = 98,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(796),
                            Funcionalidades = "Modificación  estado instalacion",
                            Modulo = "Instalacion",
                            NombrePermiso = "Estados"
                        },
                        new
                        {
                            Id = 99,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(797),
                            Funcionalidades = "Baja estado instalacion",
                            Modulo = "Instalacion",
                            NombrePermiso = "Estados"
                        },
                        new
                        {
                            Id = 100,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(798),
                            Funcionalidades = "Alta estado torneo",
                            Modulo = "Torneo",
                            NombrePermiso = "Estados"
                        },
                        new
                        {
                            Id = 101,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(800),
                            Funcionalidades = "Modificación estado torneo",
                            Modulo = "Torneo",
                            NombrePermiso = "Estados"
                        },
                        new
                        {
                            Id = 102,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(802),
                            Funcionalidades = "Baja estado torneo",
                            Modulo = "Torneo",
                            NombrePermiso = "Estados"
                        },
                        new
                        {
                            Id = 103,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(803),
                            Funcionalidades = "Alta tipo evento",
                            Modulo = "Evento",
                            NombrePermiso = "Tipos"
                        },
                        new
                        {
                            Id = 104,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(804),
                            Funcionalidades = "Modificación tipo evento",
                            Modulo = "Evento",
                            NombrePermiso = "Tipos"
                        },
                        new
                        {
                            Id = 105,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(806),
                            Funcionalidades = "Baja tipo evento",
                            Modulo = "Evento",
                            NombrePermiso = "Tipos"
                        },
                        new
                        {
                            Id = 106,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(807),
                            Funcionalidades = "Alta tipo accion",
                            Modulo = "Accion",
                            NombrePermiso = "Tipos"
                        },
                        new
                        {
                            Id = 107,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(809),
                            Funcionalidades = "Modificación tipo accion",
                            Modulo = "Accion",
                            NombrePermiso = "Tipos"
                        },
                        new
                        {
                            Id = 108,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(810),
                            Funcionalidades = "Baja tipo accion",
                            Modulo = "Accion",
                            NombrePermiso = "Tipos"
                        },
                        new
                        {
                            Id = 109,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(811),
                            Funcionalidades = "Descargar guia para generar backup",
                            Modulo = "Backup",
                            NombrePermiso = "Backup"
                        },
                        new
                        {
                            Id = 110,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(813),
                            Funcionalidades = "Descargar guia para restaurar backup",
                            Modulo = "Backup",
                            NombrePermiso = "Backup"
                        },
                        new
                        {
                            Id = 111,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(814),
                            Funcionalidades = "Actualizar archivos",
                            Modulo = "Backup",
                            NombrePermiso = "Backup"
                        },
                        new
                        {
                            Id = 112,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(816),
                            Funcionalidades = "Descargar Excel",
                            Modulo = "Reservas",
                            NombrePermiso = "Reportes"
                        },
                        new
                        {
                            Id = 113,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(817),
                            Funcionalidades = "Descargar PDF",
                            Modulo = "Reservas",
                            NombrePermiso = "Reportes"
                        },
                        new
                        {
                            Id = 114,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(819),
                            Funcionalidades = "Descargar Excel",
                            Modulo = "Asistencia lecciones",
                            NombrePermiso = "Reportes"
                        },
                        new
                        {
                            Id = 115,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(820),
                            Funcionalidades = "Descargar PDF",
                            Modulo = "Asistencia lecciones",
                            NombrePermiso = "Reportes"
                        },
                        new
                        {
                            Id = 116,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(821),
                            Funcionalidades = "Descargar Excel",
                            Modulo = "Asistencias eventos",
                            NombrePermiso = "Reportes"
                        },
                        new
                        {
                            Id = 117,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(823),
                            Funcionalidades = "Descargar PDF",
                            Modulo = "Asistencias eventos",
                            NombrePermiso = "Reportes"
                        },
                        new
                        {
                            Id = 118,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(824),
                            Funcionalidades = "Descargar Excel",
                            Modulo = "Estadisticas",
                            NombrePermiso = "Reportes"
                        },
                        new
                        {
                            Id = 119,
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(825),
                            Funcionalidades = "Descargar PDF",
                            Modulo = "Estadisticas",
                            NombrePermiso = "Reportes"
                        });
                });

            modelBuilder.Entity("ApiNet8.Models.Usuarios.SolicitudAsociacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MotivoRechazo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("SolicitudAsociacion");
                });

            modelBuilder.Entity("ApiNet8.Models.Usuarios.SolicitudAsociacionHistorial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DetalleCambioEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoSolicitudAsociacionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SolicitudAsociacionId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioEditor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstadoSolicitudAsociacionId");

                    b.HasIndex("SolicitudAsociacionId");

                    b.ToTable("SolicitudAsociacionHistorial");
                });

            modelBuilder.Entity("ApiNet8.Models.Usuarios.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CodPostal")
                        .HasColumnType("int");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeporteFavorito")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Dni")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAceptacionTYC")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaCambioContrasena")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("FotoPerfil")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("GrupoFamiliarId")
                        .HasColumnType("int");

                    b.Property<string>("ImageType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Localidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pais")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PartidoId")
                        .HasColumnType("int");

                    b.Property<string>("Provincia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UltimoAcceso")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GrupoFamiliarId");

                    b.HasIndex("PartidoId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("ApiNet8.Models.Usuarios.UsuarioEstado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DescripcionEstado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreEstado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioEditor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UsuarioEstado");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DescripcionEstado = "Usuario activo en el club",
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(221),
                            NombreEstado = "Activo",
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 2,
                            DescripcionEstado = "Usuario bloqueado",
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(234),
                            NombreEstado = "Bloqueado",
                            UsuarioEditor = 1
                        },
                        new
                        {
                            Id = 3,
                            DescripcionEstado = "Usuario desactivado",
                            FechaCreacion = new DateTime(2024, 9, 11, 18, 35, 38, 733, DateTimeKind.Local).AddTicks(239),
                            NombreEstado = "Desactivado",
                            UsuarioEditor = 1
                        });
                });

            modelBuilder.Entity("ApiNet8.Models.Usuarios.UsuarioHistorial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DetalleCambioEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UsuarioEditor")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioEstadoId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioEstadoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioHistorial");
                });

            modelBuilder.Entity("ApiNet8.Models.Partidos.Partido", b =>
                {
                    b.HasBaseType("ApiNet8.Models.Eventos.Evento");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GanadorId")
                        .HasColumnType("int");

                    b.Property<int?>("LocalId")
                        .HasColumnType("int");

                    b.Property<int?>("PartidoFaseId")
                        .HasColumnType("int");

                    b.Property<int?>("Periodo")
                        .HasColumnType("int");

                    b.Property<string>("Resultado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Set")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VisitanteId")
                        .HasColumnType("int");

                    b.HasIndex("GanadorId");

                    b.HasIndex("LocalId");

                    b.HasIndex("PartidoFaseId");

                    b.HasIndex("VisitanteId");

                    b.HasDiscriminator().HasValue("Partido");
                });

            modelBuilder.Entity("ApiNet8.Models.Club.ClubHistorial", b =>
                {
                    b.HasOne("ApiNet8.Models.Club.ParametrosClub", null)
                        .WithMany("clubHistoriales")
                        .HasForeignKey("ParametrosClubId");
                });

            modelBuilder.Entity("ApiNet8.Models.Club.ParametrosClub", b =>
                {
                    b.HasOne("ApiNet8.Models.Club.PerfilClub", "PerfilClub")
                        .WithMany()
                        .HasForeignKey("PerfilClubId");

                    b.Navigation("PerfilClub");
                });

            modelBuilder.Entity("ApiNet8.Models.Eventos.Asistencia", b =>
                {
                    b.HasOne("ApiNet8.Models.Eventos.Evento", "Evento")
                        .WithMany()
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiNet8.Models.Usuarios.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ApiNet8.Models.Eventos.Evento", b =>
                {
                    b.HasOne("ApiNet8.Models.Lecciones.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiNet8.Models.Reservas.Instalacion", "Instalacion")
                        .WithMany()
                        .HasForeignKey("InstalacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiNet8.Models.Eventos.TipoEvento", "TipoEvento")
                        .WithMany()
                        .HasForeignKey("TipoEventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Instalacion");

                    b.Navigation("TipoEvento");
                });

            modelBuilder.Entity("ApiNet8.Models.Eventos.HistorialEvento", b =>
                {
                    b.HasOne("ApiNet8.Models.Eventos.EstadoEvento", "EstadoEvento")
                        .WithMany()
                        .HasForeignKey("EstadoEventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiNet8.Models.Eventos.Evento", null)
                        .WithMany("HistorialEventoList")
                        .HasForeignKey("EventoId");

                    b.Navigation("EstadoEvento");
                });

            modelBuilder.Entity("ApiNet8.Models.Eventos.Inscripcion", b =>
                {
                    b.HasOne("ApiNet8.Models.Eventos.Evento", "Evento")
                        .WithMany()
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiNet8.Models.Usuarios.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ApiNet8.Models.Lecciones.AsistenciaLeccion", b =>
                {
                    b.HasOne("ApiNet8.Models.Lecciones.Leccion", "Leccion")
                        .WithMany()
                        .HasForeignKey("LeccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Leccion");
                });

            modelBuilder.Entity("ApiNet8.Models.Lecciones.Disciplina", b =>
                {
                    b.HasOne("ApiNet8.Models.Eventos.Evento", null)
                        .WithMany("Disciplinas")
                        .HasForeignKey("EventoId");
                });

            modelBuilder.Entity("ApiNet8.Models.Lecciones.InscripcionUsuario", b =>
                {
                    b.HasOne("ApiNet8.Models.Usuarios.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ApiNet8.Models.Lecciones.Leccion", "Leccion")
                        .WithMany()
                        .HasForeignKey("LeccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Leccion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ApiNet8.Models.Lecciones.Leccion", b =>
                {
                    b.HasOne("ApiNet8.Models.Lecciones.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiNet8.Models.Lecciones.Disciplina", "Disciplina")
                        .WithMany()
                        .HasForeignKey("DisciplinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiNet8.Models.Usuarios.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Disciplina");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ApiNet8.Models.Lecciones.LeccionHistorial", b =>
                {
                    b.HasOne("ApiNet8.Models.Lecciones.LeccionEstado", "LeccionEstado")
                        .WithMany()
                        .HasForeignKey("LeccionEstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiNet8.Models.Lecciones.Leccion", null)
                        .WithMany("LeccionHistoriales")
                        .HasForeignKey("LeccionId");

                    b.Navigation("LeccionEstado");
                });

            modelBuilder.Entity("ApiNet8.Models.NoticiasYNotificaciones.UsuarioNotificacion", b =>
                {
                    b.HasOne("ApiNet8.Models.NoticiasYNotificaciones.Notificacion", "Notificacion")
                        .WithMany()
                        .HasForeignKey("NotificacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiNet8.Models.Usuarios.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Notificacion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ApiNet8.Models.Partidos.AccionPartido", b =>
                {
                    b.HasOne("ApiNet8.Models.Partidos.Partido", "Partido")
                        .WithMany()
                        .HasForeignKey("PartidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiNet8.Models.Partidos.TipoAccionPartido", "TipoAccionPartido")
                        .WithMany()
                        .HasForeignKey("TipoAccionPartidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Partido");

                    b.Navigation("TipoAccionPartido");
                });

            modelBuilder.Entity("ApiNet8.Models.Partidos.Equipo", b =>
                {
                    b.HasOne("ApiNet8.Models.Lecciones.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiNet8.Models.Lecciones.Disciplina", "Disciplina")
                        .WithMany()
                        .HasForeignKey("DisciplinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Disciplina");
                });

            modelBuilder.Entity("ApiNet8.Models.Partidos.EquipoHistorial", b =>
                {
                    b.HasOne("ApiNet8.Models.Partidos.EquipoEstado", "EquipoEstado")
                        .WithMany()
                        .HasForeignKey("EquipoEstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiNet8.Models.Partidos.Equipo", null)
                        .WithMany("EquipoHistoriales")
                        .HasForeignKey("EquipoId");

                    b.Navigation("EquipoEstado");
                });

            modelBuilder.Entity("ApiNet8.Models.Partidos.EquipoPartido", b =>
                {
                    b.HasOne("ApiNet8.Models.Partidos.Equipo", "Equipo")
                        .WithMany()
                        .HasForeignKey("EquipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipo");
                });

            modelBuilder.Entity("ApiNet8.Models.Partidos.EquipoUsuario", b =>
                {
                    b.HasOne("ApiNet8.Models.Partidos.Equipo", null)
                        .WithMany("EquipoUsuarios")
                        .HasForeignKey("EquipoId");

                    b.HasOne("ApiNet8.Models.Usuarios.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ApiNet8.Models.Partidos.Estadistica", b =>
                {
                    b.HasOne("ApiNet8.Models.Lecciones.AsistenciaLeccion", "AsistenciaLeccion")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ApiNet8.Models.Partidos.Equipo", "Equipo")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ApiNet8.Models.Partidos.Partido", "Partido")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ApiNet8.Models.Partidos.TipoAccionPartido", "TipoAccionPartido")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AsistenciaLeccion");

                    b.Navigation("Equipo");

                    b.Navigation("Partido");

                    b.Navigation("TipoAccionPartido");
                });

            modelBuilder.Entity("ApiNet8.Models.Partidos.TipoAccionHistorial", b =>
                {
                    b.HasOne("ApiNet8.Models.Partidos.TipoAccionEstado", "TipoAccionEstado")
                        .WithMany()
                        .HasForeignKey("TipoAccionEstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiNet8.Models.Partidos.TipoAccionPartido", null)
                        .WithMany("TipoAccionHistoriales")
                        .HasForeignKey("TipoAccionPartidoId");

                    b.Navigation("TipoAccionEstado");
                });

            modelBuilder.Entity("ApiNet8.Models.Partidos.TipoAccionPartido", b =>
                {
                    b.HasOne("ApiNet8.Models.Lecciones.Disciplina", "Disciplina")
                        .WithMany()
                        .HasForeignKey("DisciplinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Disciplina");
                });

            modelBuilder.Entity("ApiNet8.Models.Reservas.InstalacionHistorial", b =>
                {
                    b.HasOne("ApiNet8.Models.Reservas.InstalacionEstado", "InstalacionEstado")
                        .WithMany()
                        .HasForeignKey("InstalacionEstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiNet8.Models.Reservas.Instalacion", "Instalacion")
                        .WithMany()
                        .HasForeignKey("InstalacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instalacion");

                    b.Navigation("InstalacionEstado");
                });

            modelBuilder.Entity("ApiNet8.Models.Reservas.Reserva", b =>
                {
                    b.HasOne("ApiNet8.Models.Reservas.Instalacion", "Instalacion")
                        .WithMany()
                        .HasForeignKey("InstalacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiNet8.Models.Usuarios.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instalacion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ApiNet8.Models.TYC.TerminosYCondiciones", b =>
                {
                    b.HasOne("ApiNet8.Models.TYC.HistorialTerminosYCondiciones", "HistorialTerminosYCondiciones")
                        .WithMany()
                        .HasForeignKey("HistorialTerminosYCondicionesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HistorialTerminosYCondiciones");
                });

            modelBuilder.Entity("ApiNet8.Models.Torneos.PartidoFase", b =>
                {
                    b.HasOne("ApiNet8.Models.Torneos.PartidoFase", null)
                        .WithMany("Llave")
                        .HasForeignKey("PartidoFaseId");

                    b.HasOne("ApiNet8.Models.Torneos.Torneo", "Torneo")
                        .WithMany()
                        .HasForeignKey("TorneoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Torneo");
                });

            modelBuilder.Entity("ApiNet8.Models.Torneos.Torneo", b =>
                {
                    b.HasOne("ApiNet8.Models.Lecciones.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiNet8.Models.Lecciones.Disciplina", "Disciplina")
                        .WithMany()
                        .HasForeignKey("DisciplinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Disciplina");
                });

            modelBuilder.Entity("ApiNet8.Models.Torneos.TorneoHistorial", b =>
                {
                    b.HasOne("ApiNet8.Models.Torneos.TorneoEstado", "TorneoEstado")
                        .WithMany()
                        .HasForeignKey("TorneoEstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiNet8.Models.Torneos.Torneo", null)
                        .WithMany("TorneoHistoriales")
                        .HasForeignKey("TorneoId");

                    b.Navigation("TorneoEstado");
                });

            modelBuilder.Entity("ApiNet8.Models.Usuarios.CodigoVerificacion", b =>
                {
                    b.HasOne("ApiNet8.Models.Usuarios.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ApiNet8.Models.Usuarios.GrupoFamiliar", b =>
                {
                    b.HasOne("ApiNet8.Models.Usuarios.Usuario", "DuenioGrupoFamiliar")
                        .WithMany()
                        .HasForeignKey("DuenioGrupoFamiliarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DuenioGrupoFamiliar");
                });

            modelBuilder.Entity("ApiNet8.Models.Usuarios.PerfilUsuario", b =>
                {
                    b.HasOne("ApiNet8.Models.Usuarios.Perfil", "Perfil")
                        .WithMany()
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiNet8.Models.Usuarios.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Perfil");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ApiNet8.Models.Usuarios.SolicitudAsociacion", b =>
                {
                    b.HasOne("ApiNet8.Models.Usuarios.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ApiNet8.Models.Usuarios.SolicitudAsociacionHistorial", b =>
                {
                    b.HasOne("ApiNet8.Models.Usuarios.EstadoSolicitudAsociacion", "EstadoSolicitudAsociacion")
                        .WithMany()
                        .HasForeignKey("EstadoSolicitudAsociacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiNet8.Models.Usuarios.SolicitudAsociacion", null)
                        .WithMany("SolicitudAsociacionHistoriales")
                        .HasForeignKey("SolicitudAsociacionId");

                    b.Navigation("EstadoSolicitudAsociacion");
                });

            modelBuilder.Entity("ApiNet8.Models.Usuarios.Usuario", b =>
                {
                    b.HasOne("ApiNet8.Models.Usuarios.GrupoFamiliar", null)
                        .WithMany("Integrantes")
                        .HasForeignKey("GrupoFamiliarId");

                    b.HasOne("ApiNet8.Models.Partidos.Partido", null)
                        .WithMany("Usuarios")
                        .HasForeignKey("PartidoId");
                });

            modelBuilder.Entity("ApiNet8.Models.Usuarios.UsuarioHistorial", b =>
                {
                    b.HasOne("ApiNet8.Models.Usuarios.UsuarioEstado", "UsuarioEstado")
                        .WithMany()
                        .HasForeignKey("UsuarioEstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiNet8.Models.Usuarios.Usuario", null)
                        .WithMany("UsuarioHistoriales")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("UsuarioEstado");
                });

            modelBuilder.Entity("ApiNet8.Models.Partidos.Partido", b =>
                {
                    b.HasOne("ApiNet8.Models.Partidos.EquipoPartido", "Ganador")
                        .WithMany()
                        .HasForeignKey("GanadorId");

                    b.HasOne("ApiNet8.Models.Partidos.EquipoPartido", "Local")
                        .WithMany()
                        .HasForeignKey("LocalId");

                    b.HasOne("ApiNet8.Models.Torneos.PartidoFase", null)
                        .WithMany("Partidos")
                        .HasForeignKey("PartidoFaseId");

                    b.HasOne("ApiNet8.Models.Partidos.EquipoPartido", "Visitante")
                        .WithMany()
                        .HasForeignKey("VisitanteId");

                    b.Navigation("Ganador");

                    b.Navigation("Local");

                    b.Navigation("Visitante");
                });

            modelBuilder.Entity("ApiNet8.Models.Club.ParametrosClub", b =>
                {
                    b.Navigation("clubHistoriales");
                });

            modelBuilder.Entity("ApiNet8.Models.Eventos.Evento", b =>
                {
                    b.Navigation("Disciplinas");

                    b.Navigation("HistorialEventoList");
                });

            modelBuilder.Entity("ApiNet8.Models.Lecciones.Leccion", b =>
                {
                    b.Navigation("LeccionHistoriales");
                });

            modelBuilder.Entity("ApiNet8.Models.Partidos.Equipo", b =>
                {
                    b.Navigation("EquipoHistoriales");

                    b.Navigation("EquipoUsuarios");
                });

            modelBuilder.Entity("ApiNet8.Models.Partidos.TipoAccionPartido", b =>
                {
                    b.Navigation("TipoAccionHistoriales");
                });

            modelBuilder.Entity("ApiNet8.Models.Torneos.PartidoFase", b =>
                {
                    b.Navigation("Llave");

                    b.Navigation("Partidos");
                });

            modelBuilder.Entity("ApiNet8.Models.Torneos.Torneo", b =>
                {
                    b.Navigation("TorneoHistoriales");
                });

            modelBuilder.Entity("ApiNet8.Models.Usuarios.GrupoFamiliar", b =>
                {
                    b.Navigation("Integrantes");
                });

            modelBuilder.Entity("ApiNet8.Models.Usuarios.SolicitudAsociacion", b =>
                {
                    b.Navigation("SolicitudAsociacionHistoriales");
                });

            modelBuilder.Entity("ApiNet8.Models.Usuarios.Usuario", b =>
                {
                    b.Navigation("UsuarioHistoriales");
                });

            modelBuilder.Entity("ApiNet8.Models.Partidos.Partido", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
